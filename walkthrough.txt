Step 1. Install Snort on the Kali machine using the command 'apt install snort'
Step 2. After installing Snort, make sure the machine you are using is on the host-only network adapter so that it can communicate with another machine on the same subnet.
Step 3. Use the Kali machine to ping the other machine and vice versa. If both can successfully ping each other, it means that we can begin configuring the configuration settings for snort. If not, disable any firewalls that you may have enabled and ping again. Both sides should be able to successfully reach the other.
Step 4. Open Wireshark on the Kali machine. This will be used to capture packets between and traffic. 
Step 5. Choose the capture filter. In this case, it will be whichever adapter is configured with the Host-Only Adapter.
Step 6. Begin pinging and conducting nmap scans from the other machine so that Wireshark can capture the traffic. 
Step 7. Save the captured traffic with Wireshark. This traffic will be used to test experimental rules configured for Snort.
Step 4. Steps 4 through 12 are for configuring more complex Snort rules. Please skip to step 13 if you would like to configure a small ruleset where you can easily detect the rules you created. Navigate to the snort.conf file located in /etc/snort/
Step 5. In the snort.conf file, there is a home network variable called HOME_NET located in the line 'ipvar HOME_NET any'. Replace 'any' with the ip address of your machine. This will allow Snort to recognize any machine as part of an external network even if it is on the same subnet.
Step 6. Make sure the line 'ipvar EXTERNAL_NET !$HOME_NET' is uncommented. Because machines outside of the ip address indicated in the original declaration of HOME_NET are recognized as part of an external network, this allows you to use a machine on the same subnet to test any experimental Snort rules configured later.  
Step 7. Look for the section that begins with 'Step #7: Customize your rule set'. This is normally where you decide which rules you want to use.   
Step 8. Navigate to /etc/snort/rules to create your own rule file. In this case, I am creating a file named fullstack.rules.
Step 9. Here is a sample rule I have added: 'alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"Incoming pings!"; icode:0; itype:8; sid:10000;)' This will create an alert with the message "Incoming pings!" for any ICMP requests coming from the EXTERNAL_NET with the code of 0 and type 8 attempting to connect with the HOME_NET. If you want to indicate 2 way communication, use <> instead of ->  
Step 10. Add 'include $RULE_PATH/fullstack.rules' at the end of the rule set section. This will include your newly made ruleset. 'sid' is a unique identifier for this particular alert.
Step 11. Now run 'snort -T -c snort.conf -r SnortTest.pcapng'. This will apply the Snort configuration you just modified with fullstack.rules to read the Wireshark capture you did earlier. To capture traffic from a device, use '-i eth0' instead of '-r SnortTest.pcapng'. Remember to include the full filepath if the pcap file is not accessible where you run the command.
Step 12. View the logs and alert file in /var/log/snort/  

Step 13. Create a new directory called logs and a file called fullstack.rules.
Step 14. Add 'alert icmp any any -> 192.168.56.101 any (msg:"Incoming pings!"; icode:0; itype:8; sid:10000;)' to fullstack.rules. This will create an alert with the message "Incoming pings!" for any ICMP requests with the code of 0 and type 8 coming from the IP address other than 192.168.56.101. Notice that instead of '$EXTERNAL_NET' and 'HOME_NET', 'any' and '192.168.56.101' is used instead. This is because snort.conf is not being used, so you will not be able to call the EXTERNAL_NET and HOME_NET variable located in the configuration file. 'sid' is a unique identifier for this particular alert.
Step 15. Add 'alert tcp any any -> 192.168.56.101 any (msg:"Incoming nmap sweep!"; sid:10001;)' to fullstack.rules. This will create an alert for any tcp packets coming from outside 192.168.56.101. If you want to indicate 2 way communication, use <> instead of ->. Notice that this sid is different from the one above. Every sid must be unique.
Step 16. Run snort with 'snort -l ./logs -c fullstack.rules -r SnortTest.pcap' without any quotations. If you see a lot of 'WARNING: No preprocessors configured for policy 0.' on the screen, it means that we did not use any preprocessors normally set when using the snort.conf file. It should exit cleanly.
Step 17. Navigate to the 'logs' directory. There should be an ASCII text file called 'alert' that you can easily see. You should be able to see 'Incoming pings!' and 'Incoming nmap sweep'. If you would like to read the snort logs, simply type 'snort -r sample_snort_log.1000000'. 

